Solution to question 2
----------------------

The set of solution is an affine subspace:
["latex"]
$\displaystyle{\left\{- k J_{lw}(\textbf{q})^{+} \textbf{e} + (I - J_{lw}^+ J_{lw}(\textbf{q}))\textbf{u}\right\}\ \ \ \mbox {where}\ \ \ \ \textbf{u}\in\mathbb{R}^n}$

and n is the number of columns of the Jacobian.
["latex"]
$\displaystyle{J_{lw}^+}$

is the http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse[Moore-Penrose pseudo-inverse] of the Jacobian. If the Jacobian is full rank with more columns
than rows, the following expression holds:
["latex"]
$\displaystyle{J_{lw}^+ = J_{lw}^T (J_{lw} J_{lw}^T)^{-1}}$

TIP: The above formula is the generalization of the one dimensional case.

Implementation
~~~~~~~~~~~~~~
[source,python]
----
import pinocchio as se3
from pinocchio.utils import *

robot = se3.RobotWrapper('../models/romeo.urdf')
robot.initDisplay()

q = robot.q0
v = rand(robot.nv)

xdes = np.matrix([3.0,1.0,2.0]).T

for i in range(1000):
    Mrh = robot.Mrh(q)
    e = Mrh.translation[0:3,0] - xdes
    J = Mrh.rotation * robot.Jrh(q)[:3,:]
    qdot = -npl.pinv(J)*e
    robot.increment(q,qdot*1e-2)
    robot.display(q)
----
