//
// Copyright (c) 2016 CNRS
// Author: Florian Valenza
//
// This file is part of Pinocchio
// Pinocchio is free software: you can redistribute it
// and/or modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation, either version
// 3 of the License, or (at your option) any later version.
//
// Pinocchio is distributed in the hope that it will be
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty
// of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Lesser Public License for more details. You should have
// received a copy of the GNU Lesser General Public License along with
// Pinocchio If not, see
// <http://www.gnu.org/licenses/>.

namespace pinocchio
{
  
/** \page Chapters_PythonBindings Python Bindings

Here you can find explications concerning python bindings and calls to C++ methods + RobotWrapper Class

Pinocchio is a powerful C++ library, whose main functionalities are in header files. This involves that when you want to compile your application calling Pinocchio, it can tak a long time. If you don't take great care, you can even forget some semicolon or bugs that can make the compilation phase painful.

Pinocchio comes with a python library that allows people to take advantages of interpreted languages, so that you don't have to compile everything, everytime. The counterpart is that the Python API makes calls to the C++'s one and is then less efficient in term of computation times. The python library even comes with a class called RobotWrapper that encapsulate the Model, Data, GeometryModel and GeometryData classes to ease the calls to algorithms. This Class comes with a bridge to a visualisation tool called Gepetto-Viewer in which you can display your robot and see it moving in its environment.

We greetly encourage people that want to discover Pinocchio to use the Python bindings, whereas the C++ library is more for people that know what they do and that really want the execution time to be as fast as possible.

*/  
}